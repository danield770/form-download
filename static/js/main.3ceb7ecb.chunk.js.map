{"version":3,"sources":["Components/Content.js","Components/ValidationMessage.js","hooks/useFetch.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Content","className","ValidationMessage","useFetch","fetchObject","useState","data","setData","statusCode","setStatusCode","useEffect","url","requestOptions","method","headers","undefined","body","JSON","stringify","fetch","then","res","status","json","console","log","catch","err","Form","setFetchObject","React","name","company","phone","email","privacy","validation","setValidation","nameRef","useRef","companyRef","phoneRef","mailRef","privacyRef","BASEURL","process","current","value","company_name","id","link","a","Object","assign","document","createElement","href","style","download","appendChild","click","remove","window","location","onSubmit","e","preventDefault","length","test","checked","noValidate","type","placeholder","ref","htmlFor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ceb7ecb.chunk.js","sourcesContent":["function Content() {\n  return (\n    <section className='content'>\n      <h1>The Future of Work in the now: Why you should Become Remote-ready</h1>\n      <h3>Infographic</h3>\n      <p>\n        The results are in, and the verdict? Remote is here to stay. Thanks to a\n        global pandemic companies have had to reevaluate the power of\n        distributed workforces and we’ve put together all the reasons why going\n        remote is the right move to make. In this infographics, you’ll see:\n      </p>\n      <ul>\n        <li>How remote work broadens the talent pool</li>\n        <li>The productivity results behind distributed teams</li>\n        <li>An increase in diversity as a result of remote recruitment</li>\n        <li>Money saved on operational costs and salary negotiations</li>\n      </ul>\n      <p>\n        What better time to refresh your strategy than on the brink of a whole\n        new world? Dig into this list of recruiting methodologies and adjust\n        your sails for the future!\n      </p>\n    </section>\n  );\n}\n\nexport default Content;\n","function ValidationMessage() {\n  return <div className='error'>Invalid, please try again</div>;\n}\n\nexport default ValidationMessage;\n","import { useState, useEffect } from 'react';\n\nfunction useFetch(fetchObject) {\n  const [data, setData] = useState();\n  const [statusCode, setStatusCode] = useState();\n\n  useEffect(() => {\n    // console.log('useFetch: fetchObject: ', fetchObject);\n    if (fetchObject.url) {\n      const requestOptions = {\n        method: fetchObject.method || 'GET',\n        headers: fetchObject.headers,\n      };\n      if (fetchObject.body !== undefined) {\n        //requestOptions.method = 'POST';\n        requestOptions.body = JSON.stringify(fetchObject.body);\n      }\n      fetch(fetchObject.url, requestOptions)\n        .then((res) => {\n          setStatusCode(res.status);\n          return res.json();\n        })\n        .then((json) => {\n          console.log('useFetch - json response: ', json);\n          setData(json);\n        })\n        .catch((err) => {\n          console.log('catch - fetch failed');\n          setData(err);\n        });\n    }\n  }, [fetchObject]);\n  return { data, statusCode };\n}\n\nexport default useFetch;\n","import React, { useState, useEffect } from 'react';\nimport ValidationMessage from './ValidationMessage';\nimport useFetch from '../hooks/useFetch';\n\nfunction Form() {\n  const initialState = { url: '', method: '', headers: {}, body: {} };\n  const [fetchObject, setFetchObject] = useState(initialState);\n  const { data, statusCode } = useFetch(fetchObject);\n  const [validation, setValidation] = React.useState({\n    name: 'false',\n    company: 'false',\n    phone: 'false',\n    email: 'false',\n    privacy: 'false',\n  });\n  const nameRef = React.useRef(null);\n  const companyRef = React.useRef(null);\n  const phoneRef = React.useRef(null);\n  const mailRef = React.useRef(null);\n  const privacyRef = React.useRef(null);\n\n  const BASEURL =\n    'https://desolate-ridge-21792.herokuapp.com/https://u5d6gnw6aj.execute-api.us-east-1.amazonaws.com/api/';\n\n  useEffect(() => {\n    validation.name &&\n      validation.company &&\n      validation.phone &&\n      validation.email &&\n      validation.privacy &&\n      setFetchObject({\n        url: `${BASEURL}data`,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': process.env.REACT_APP_X_API_KEY,\n        },\n        body: {\n          name: nameRef.current.value,\n          company_name: companyRef.current.value,\n          email: mailRef.current.value,\n          phone: phoneRef.current.value,\n        },\n      });\n  }, [validation]);\n\n  console.log('data: ', data);\n  data?.id && fetchObject.method && requestLink();\n  if (data?.link) {\n    console.log('link: ', data.link);\n    let a = Object.assign(document.createElement('a'), {\n      href: data.link,\n      style: 'display: none',\n      download: 'joonkoDiversity.pdf',\n    });\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n  }\n  if (statusCode === 404) {\n    console.log('statusCode: 404');\n    window.location = 'http://www.joonko.co';\n  }\n  function requestLink() {\n    console.log('requestLink');\n    setFetchObject({\n      url: `${BASEURL}file?id=${data.id}`,\n      headers: { 'x-api-key': process.env.REACT_APP_X_API_KEY },\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setValidation({\n      name: nameRef.current.value.length > 0,\n      company: companyRef.current.value.length > 0,\n      phone: phoneRef.current.value.length > 0,\n      email:\n        mailRef.current.value.length > 0 &&\n        /^\\S+@\\S+\\.\\S+$/.test(mailRef.current.value),\n      privacy: privacyRef.current.checked,\n    });\n  }\n\n  return (\n    <section className='form'>\n      <h3>Want to get the full version?</h3>\n      <div>Fill in the form below</div>\n      <form onSubmit={handleSubmit} noValidate>\n        <input type='text' placeholder='Full name' ref={nameRef} />\n        {!validation.name && <ValidationMessage />}\n        <input\n          type='text'\n          name=''\n          placeholder='Company name'\n          ref={companyRef}\n        />\n        {!validation.company && <ValidationMessage />}\n        <input type='tel' name='phone' placeholder='Phone' ref={phoneRef} />\n        {!validation.phone && <ValidationMessage />}\n        <input type='email' placeholder='Work email' ref={mailRef} />\n        {!validation.email && <ValidationMessage />}\n        <button>Download now &gt;&gt;</button>\n\n        <div className='privacy'>\n          <input className='cb' type='checkbox' id='privacy' ref={privacyRef} />\n          <label\n            htmlFor='privacy'\n            className={`${!validation.privacy ? 'error' : ''}`}\n          >\n            I agree to the privacy policy including for Joonko to use my contact\n            details to contact me for marketing purposes.\n          </label>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default Form;\n","import './App.css';\nimport Content from './Components/Content';\nimport Form from './Components/Form';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Content />\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}